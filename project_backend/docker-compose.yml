version: "3"
services:
  postgresdb:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
#      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
#    volumes:
#      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

#  postgres_db:
#    container_name: db_app
#    image: postgres
#    #    restart: always
#    environment:
#      POSTGRES_PASSWORD: password
#      POSTGRES_USER: user
#      POSTGRES_DB: users_db
##    volumes:
##      - "postgres:/data/postgres"
#    ports:
#      - "5432:5432"



  users_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    ports:
      - "1234:1234"
    environment:
       HOST: postgresdb
       USER: postgres
       PASSWORD: password
       DATABASE: evraz_project_users_service
    depends_on:
      - postgresdb

  books_service:
    build:
      context: ./book_service
      dockerfile: Dockerfile
    ports:
      - "1235:1235"
    environment:
       HOST: postgresdb
       USER: postgres
       PASSWORD: password
       DATABASE: evraz_project_books_service
    depends_on:
      - postgresdb


  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
       RABBITMQ_DEFAULT_USER: superuser
       RABBITMQ_DEFAULT_PASS: password
    volumes:
      - "rabbitmq_data:/data"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - users_service
      - books_service


#networks:
#  service_db_network:
#    driver: bridge

volumes:
  rabbitmq_data:




